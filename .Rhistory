warnings()
load("C:/Users/mesudell/Desktop/R code/INDANASBPST2STOPfit.dat")
?joint
ls()
str(INDANA.SBPST2.STOPfit)
str(INDANA.SBPST2.STOP)
#########################################
### two stage analysis of INDANA data ###
#########################################
############################
### SBP TIME TO ST ######
############################
setwd("C:/Users/mesudell/Desktop/R code")
load("C:/Users/mesudell/Desktop/R code/INDANA.SBPST2.dat")
#########################
### necessary libraries
library(joineR)
library(joineRmeta)
###########################################
### separate the data by study
rowsCOOP<-which(INDANA.SBPST2$baseline$trial == "COOP")
rowsMRC1<-which(INDANA.SBPST2$baseline$trial == "MRC1")
rowsMRC2<-which(INDANA.SBPST2$baseline$trial == "MRC2")
rowsSHEP<-which(INDANA.SBPST2$baseline$trial == "SHEP")
rowsSTOP<-which(INDANA.SBPST2$baseline$trial == "STOP")
table(INDANA.SBPST2$baseline$trial)
INDANA.SBPST2.COOP<-subset(INDANA.SBPST2,
INDANA.SBPST2$baseline$IDNEW[rowsCOOP])
INDANA.SBPST2.MRC1<-subset(INDANA.SBPST2,
INDANA.SBPST2$baseline$IDNEW[rowsMRC1])
INDANA.SBPST2.MRC2<-subset(INDANA.SBPST2,
INDANA.SBPST2$baseline$IDNEW[rowsMRC2])
INDANA.SBPST2.SHEP<-subset(INDANA.SBPST2,
INDANA.SBPST2$baseline$IDNEW[rowsSHEP])
INDANA.SBPST2.STOP<-subset(INDANA.SBPST2,
INDANA.SBPST2$baseline$IDNEW[rowsSTOP])
class(INDANA.SBPST2.COOP) <- "jointdata"
class(INDANA.SBPST2.MRC1) <- "jointdata"
class(INDANA.SBPST2.MRC2) <- "jointdata"
class(INDANA.SBPST2.SHEP) <- "jointdata"
class(INDANA.SBPST2.STOP) <- "jointdata"
str(INDANA.SBPST2.STOP)
test<-joint(data = INDANA.SBPST2.STOP,
long.formula = SBP ~ 1+time+exp(-3*time)+treat,
surv.formula = Surv(dl_st,ST)~treat,
model = "intslope",
sepassoc = FALSE, longsep = FALSE, survsep = FALSE)
test<-joint(data = INDANA.SBPST2.STOP,
long.formula = SBP ~ 1+time+exp(-3*time)+TREAT,
surv.formula = Surv(dl_st,ST)~TREAT
model = "intslope",
sepassoc = FALSE, longsep = FALSE, survsep = FALSE)
test<-joint(data = INDANA.SBPST2.STOP,
long.formula = SBP ~ 1+time+exp(-3*time)+TREAT,
surv.formula = Surv(dl_st,ST)~TREAT,
model = "intslope",
sepassoc = FALSE, longsep = FALSE, survsep = FALSE)
warnings()
devtools::run_examples()
library(joineRmeta)
devtools::run_examples()
jointdat<-tojointdata(longitudinal = simdat$longitudinal,
survival = simdat$survival, id = 'id',
longoutcome = 'Y', timevarying = c('time','ltime'),
survtime = 'survtime', cens = 'cens',
time = 'time')
jointdat$baseline$study <- as.factor(jointdat$baseline$study)
jointdat$baseline$treat <- as.factor(jointdat$baseline$treat)
sepplots<-jointmetaplot(dataset = jointdat, study = 'study',
longoutcome = 'Y', longtime = 'time',
survtime = 'survtime', cens = 'cens', id = 'id',
smoother = TRUE, studynames = c('Study 1', 'Study 2',
'Study 3', 'Study 4', 'Study 5'), type = 'Both')
allplot2<-jointmetaplotall(plotlist = sepplots, ncol =2,
top = 'All studies', type = 'Both')
plotlist = sepplots
ncol =2
ncol =2
type = 'Both'
top = 'All studies'
if (class(plotlist) != "jointplots") {
stop("plotlist should be a list of plots as produced by jointmetaplot,
of class jointplots")
}
if (class(ncol) != "numeric") {
stop("ncol should be a numeric value")
}
if (!(floor(ncol) == ncol)) {
stop("ncol should be a whole number")
}
if (is.null(top)) {
top <- "All Studies"
} else {
if (class(top) != "character") {
stop("If supplied, top should be a character string")
}
}
if (missing(type)) {
stop("No type of graph requested")
}
if (!(type %in% c("Longitudinal", "Event", "Both"))) {
stop("type should be supplied as one of \" Longitudinal \",
\"Event\", \"Both\")")
}
if (is.null(nrow) == FALSE) {
if (class(nrow) != "numeric") {
stop("nrow should be a numeric value")
}
if (!(floor(nrow) == nrow)) {
stop("nrow should be a whole number")
}
if ((ncol * nrow) < length(plotlist)) {
stop("Supplied ncol and nrow don't
leave enough spaces for all the plots in plotlist")
}
} else {
if (is.null(plotlist$longplots) == FALSE) {
nrow <- ceiling(length(plotlist$longplots)/ncol)
} else {
nrow <- ceiling(length(plotlist$eventplots)/ncol)
}
}
nrow<-NULL
if (is.null(plotlist$longplots) == FALSE) {
nrow <- ceiling(length(plotlist$longplots)/ncol)
} else {
nrow <- ceiling(length(plotlist$eventplots)/ncol)
}
nrow
plots <- list()
if (is.null(plotlist$longplots)) {
stop("No longitudinal plots in supplied plot list")
}
do.call(grid.arrange, c(plotlist$longplots, list(ncol = ncol, nrow = nrow,
top = textGrob(top, gp = gpar(fontsize = 20, font = 2)))))
librarY(grid)
library(grid)
library(gridExtra)
library(ggplot2)
do.call(grid.arrange, c(plotlist$longplots, list(ncol = ncol, nrow = nrow,
top = textGrob(top, gp = gpar(fontsize = 20, font = 2)))))
warnings()
if (is.null(plotlist$eventplots)) {
stop("No time-to-event plots in supplied plot list")
}
eventplots <- plotlist$eventplots
tmp <- ggplot_gtable(ggplot_build(eventplots[[1]]))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
if (length(leg) > 0) {
eventlegend <- tmp$grobs[[leg]]
eventplots <- lapply(1:length(eventplots), function(u) {
tempplot <- eventplots[[u]]
tempplot <- tempplot + theme(legend.position = "none")
})
blankplot <- ggplot(data.frame()) + geom_blank() + theme_bw() +
theme(panel.border = element_blank())
if (length(eventplots) < (ncol * nrow)) {
for (i in (length(eventplots) + 1):(ncol * nrow)) {
eventplots[[i]] <- blankplot
}
}
eventplots[[length(eventplots) + 1]] <- eventlegend
layoutset <- rbind(do.call(rbind, split(1:(ncol * nrow), ceiling(seq_along(1:(ncol *
nrow))/ncol))), rep((ncol * nrow) + 1, ncol))
heights <- c(rep(2.5, nrow), 0.2)
} else {
blankplot <- ggplot(data.frame()) + geom_blank() + theme_bw() +
theme(panel.border = element_blank())
if (length(eventplots) < (ncol * nrow)) {
for (i in (length(eventplots) + 1):(ncol * nrow)) {
eventplots[[i]] <- blankplot
}
}
layoutset <- do.call(rbind, split(1:(ncol * nrow), ceiling(seq_along(1:(ncol *
nrow))/ncol)))
heights <- rep(2.5, nrow)
}
nrow
do.call(grid.arrange, c(eventplots, list(ncol = ncol, nrow = nrow +
1, layout_matrix = layoutset, top = textGrob(top, gp = gpar(fontsize = 20,
font = 2)), heights = heights)))
eventplots
heights
eventplots <- plotlist$eventplots
tmp <- ggplot_gtable(ggplot_build(eventplots[[1]]))
blankplot <- ggplot(data.frame()) + geom_blank() + theme_bw() +
theme(panel.border = element_blank())
if (length(eventplots) < (ncol * nrow)) {
for (i in (length(eventplots) + 1):(ncol * nrow)) {
eventplots[[i]] <- blankplot
}
}
eventplots
if (is.null(plotlist$eventplots)) {
stop("No time-to-event plots in supplied plot list")
}
eventplots <- plotlist$eventplots
tmp <- ggplot_gtable(ggplot_build(eventplots[[1]]))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
if (length(leg) > 0) {
eventlegend <- tmp$grobs[[leg]]
eventplots <- lapply(1:length(eventplots), function(u) {
tempplot <- eventplots[[u]]
tempplot <- tempplot + theme(legend.position = "none")
})
blankplot <- ggplot(data.frame()) + geom_blank() + theme_bw() +
theme(panel.border = element_blank())
if (length(eventplots) < (ncol * nrow)) {
for (i in (length(eventplots) + 1):(ncol * nrow)) {
eventplots[[i]] <- blankplot
}
}
eventplots[[length(eventplots) + 1]] <- eventlegend
layoutset <- rbind(do.call(rbind, split(1:(ncol * nrow), ceiling(seq_along(1:(ncol *
nrow))/ncol))), rep((ncol * nrow) + 1, ncol))
heights <- c(rep(2.5, nrow), 0.2)
} else {
blankplot <- ggplot(data.frame()) + geom_blank() + theme_bw() +
theme(panel.border = element_blank())
if (length(eventplots) < (ncol * nrow)) {
for (i in (length(eventplots) + 1):(ncol * nrow)) {
eventplots[[i]] <- blankplot
}
}
layoutset <- do.call(rbind, split(1:(ncol * nrow), ceiling(seq_along(1:(ncol *
nrow))/ncol)))
heights <- rep(2.5, nrow)
}
nrow
library(formatR)
formatR::tidy_app()
library(joineRmeta)
#change data to jointdata format
jointdat<-tojointdata(longitudinal = simdat$longitudinal,
survival = simdat$survival, id = 'id',
longoutcome = 'Y', timevarying = c('time','ltime'),
survtime = 'survtime', cens = 'cens',
time = 'time')
#ensure variables are correctly formatted
jointdat$baseline$study <- as.factor(jointdat$baseline$study)
jointdat$baseline$treat <- as.factor(jointdat$baseline$treat)
#produce plots
#note that inclusion of a smoother sometime results in error messages
#see ggplot2 for error message interpretation
sepplots<-jointmetaplot(dataset = jointdat, study = 'study',
longoutcome = 'Y', longtime = 'time',
survtime = 'survtime', cens = 'cens', id = 'id',
smoother = TRUE, studynames = c('Study 1', 'Study 2',
'Study 3', 'Study 4', 'Study 5'), type = 'Both')
allplot2<-jointmetaplotall(plotlist = sepplots, ncol =2,
top = 'All studies', type = 'Both')
warnings()
library(joineRmeta)
library(joineRmeta)
library(joineRmeta)
library(joineRmeta)
Sys.getenv("qpdf")
library(joineRmeta)
?Sys.setenv
Sys.setenv(qpdf = "C:\Program Files (x86)\qpdf-5.1.2-bin-mingw32\qpdf-5.1.2\bin\qpdf.exe")
Sys.setenv(qpdf = "C://Program Files (x86)//qpdf-5.1.2-bin-mingw32//qpdf-5.1.2//bin//qpdf.exe")
Sys.getenv("qpdf")
library(joineRmeta)
?devtools::add_build_ignore
devtools::add_build_ignore("README.Rmd")
devtools::use_build_ignore("README.Rmd")
library(joineRmeta)
jointdat2<-tojointdata(longitudinal = simdat2$longitudinal,
survival = simdat2$survival, id = "id", longoutcome = "Y",
timevarying = c("time","ltime"), survtime = "survtime", cens = "cens",
time = "time")
str(simdat2)
jointdat2<-tojointdata(longitudinal = simdat2$longitudinal,
survival = simdat2$survival, id = "id", longoutcome = "Y",
timevarying = c("time","ltime"), survtime = "survtime", cens = "cens",
time = "time")
length(unique(jointdat$baseline$study))
unique(jointdat$baseline$study)
str(jointdat)
jointdat<-tojointdata(longitudinal = simdat2$longitudinal,
survival = simdat2$survival, id = "id", longoutcome = "Y",
timevarying = c("time","ltime"), survtime = "survtime", cens = "cens",
time = "time")
length(unique(jointdat$baseline$study))
unique(jointdat$baseline$study)
str(jointdat)
jointdat$baseline$study<-as.factor(jointdat$baseline$study)
jointdat$baseline$treat<-as.factor(jointdat$baseline$treat)
for(i in 1:length(unique(jointdat$baseline$study))){
idstemp<-jointdat$baseline$id[which(jointdat$baseline$study %in% unique(jointdat$baseline$study)[i])]
temp<-subset(jointdat,idstemp)
class(temp)<-"jointdata"
assign(paste("jointdat",unique(jointdat$baseline$study)[i],sep="."),temp)
}
jointdat.4
setwd("C:/Users/mesudell/Desktop/R code")
joineRfit1<-joint(data = jointdat.1, long.formula = Y ~ 1 + time + treat,
surv.formula = Surv(survtime, cens) ~ treat,
model = "intslope")
joineRfit2<-joint(data = jointdat.2, long.formula = Y ~ 1 + time + treat,
surv.formula = Surv(survtime, cens) ~ treat,
model = "intslope")
joineRfit3<-joint(data = jointdat.3, long.formula = Y ~ 1 + time + treat,
surv.formula = Surv(survtime, cens) ~ treat,
model = "intslope")
library(joineR)
library(JM)
joineRfit1<-joint(data = jointdat.1, long.formula = Y ~ 1 + time + treat,
surv.formula = Surv(survtime, cens) ~ treat,
model = "intslope")
joineRfit2<-joint(data = jointdat.2, long.formula = Y ~ 1 + time + treat,
surv.formula = Surv(survtime, cens) ~ treat,
model = "intslope")
joineRfit3<-joint(data = jointdat.3, long.formula = Y ~ 1 + time + treat,
surv.formula = Surv(survtime, cens) ~ treat,
model = "intslope")
joineRfit1SE<-jointSE(fitted = joineRfit1, n.boot = 200)
system.time(joineRfit1SE<-jointSE(fitted = joineRfit1, n.boot = 200))
system.time(joineRfit1SE<-jointSE(fitted = joineRfit1, n.boot = 200))
system.time(joineRfit2SE<-jointSE(fitted = joineRfit2, n.boot = 200))
system.time(joineRfit3SE<-jointSE(fitted = joineRfit3, n.boot = 200))
joineRfits<-list(joineRfit1, joineRfit1SE,
joineRfit2, joineRfit2SE,
joineRfit3, joineRfit3SE)
names(joineRfits)<-c("joineRfit1", "joineRfit1SE",
"joineRfit2", "joineRfit2SE",
"joineRfit3", "joineRfit3SE")
save(joineRfits,file="joineRfits.RData")
joineRfit6<-joint(data = jointdat.1, long.formula = Y ~ 1 + time + treat,
surv.formula = Surv(survtime, cens) ~ treat,
model = "int")
joineRfit7<-joint(data = jointdat.2, long.formula = Y ~ 1 + time + treat,
surv.formula = Surv(survtime, cens) ~ treat,
model = "int")
joineRfit8<-joint(data = jointdat.3, long.formula = Y ~ 1 + time + treat,
surv.formula = Surv(survtime, cens) ~ treat,
model = "int")
joineRfit6SE<-jointSE(fitted = joineRfit6, n.boot = 200)
joineRfit7SE<-jointSE(fitted = joineRfit7, n.boot = 200)
joineRfit8SE<-jointSE(fitted = joineRfit8, n.boot = 200)
joineRfits2<-list(joineRfit6, joineRfit6SE,
joineRfit7, joineRfit7SE,
joineRfit8, joineRfit8SE)
names(joineRfits2)<-c("joineRfit6", "joineRfit6SE",
"joineRfit7", "joineRfit7SE",
"joineRfit8", "joineRfit8SE")
save(joineRfits2,file="joineRfits2.RData")
longdat.1<-merge(jointdat.1$longitudinal,jointdat.1$baseline,by="id")
longdat.2<-merge(jointdat.2$longitudinal,jointdat.2$baseline,by="id")
longdat.3<-merge(jointdat.3$longitudinal,jointdat.3$baseline,by="id")
survdat.1<-merge(jointdat.1$survival,jointdat.1$baseline,by="id")
survdat.2<-merge(jointdat.2$survival,jointdat.2$baseline,by="id")
survdat.3<-merge(jointdat.3$survival,jointdat.3$baseline,by="id")
lmefit1<-lme(fixed = Y ~ 1 + time + treat, data = longdat.1, random = ~ 1 + time|id, control=lmeControl(opt = "optim"))
survfit1<-coxph(Surv(survtime, cens) ~ treat, data = survdat.1, x = TRUE)
JMfit1<-jointModel(lmeObject = lmefit1, survObject = survfit1, timeVar = "time",
parameterization = "value", method = "spline-PH-aGH")
lmefit2<-lme(fixed = Y ~ 1 + time + treat, data = longdat.2, random = ~ 1 + time|id, control=lmeControl(opt = "optim"))
survfit2<-coxph(Surv(survtime, cens) ~ treat, data = survdat.2, x = TRUE)
JMfit2<-jointModel(lmeObject = lmefit2, survObject = survfit2, timeVar = "time",
parameterization = "value", method = "spline-PH-aGH")
lmefit3<-lme(fixed = Y ~ 1 + time + treat, data = longdat.3, random = ~ 1 + time|id, control=lmeControl(opt = "optim"))
survfit3<-coxph(Surv(survtime, cens) ~ treat, data = survdat.3, x = TRUE)
JMfit3<-jointModel(lmeObject = lmefit3, survObject = survfit3, timeVar = "time",
parameterization = "value", method = "spline-PH-aGH")
JMfits<-list(JMfit1,
JMfit2,
JMfit3)
names(JMfits)<-c("JMfit1",
"JMfit2",
"JMfit3")
save(JMfits,file="JMfits.RData")
dform=list(fixed = ~ 1 + treat, indFixed=c(2,4), random = ~ 1, indRandom=2)
lmefit6<-lme(fixed = Y ~ 1 + time*treat, data = longdat.1, random = ~ 1 + time|id, control=lmeControl(opt = "optim"))
survfit6<-coxph(Surv(survtime, cens) ~ treat, data = survdat.1, x = TRUE)
JMfit6<-jointModel(lmeObject = lmefit6, survObject = survfit6, timeVar = "time",
parameterization = "both", method = "spline-PH-aGH",
derivForm = dform)
lmefit7<-lme(fixed = Y ~ 1 + time*treat, data = longdat.2, random = ~ 1 + time|id, control=lmeControl(opt = "optim"))
survfit7<-coxph(Surv(survtime, cens) ~ treat, data = survdat.2, x = TRUE)
JMfit7<-jointModel(lmeObject = lmefit7, survObject = survfit7, timeVar = "time",
parameterization = "both", method = "spline-PH-aGH",
derivForm = dform)
lmefit8<-lme(fixed = Y ~ 1 + time*treat, data = longdat.3, random = ~ 1 + time|id, control=lmeControl(opt = "optim"))
survfit8<-coxph(Surv(survtime, cens) ~ treat, data = survdat.3, x = TRUE)
JMfit8<-jointModel(lmeObject = lmefit8, survObject = survfit8, timeVar = "time",
parameterization = "both", method = "spline-PH-aGH",
derivForm = dform)
JMfits2<-list(JMfit6,
JMfit7,
JMfit8)
names(JMfits2)<-c("JMfit6",
"JMfit7",
"JMfit8")
save(JMfits2,file="JMfits2.RData")
system.time(onestagefit0<-jointmeta1(data = jointdat, long.formula = Y ~ 1 + time + treat,
long.rand.ind = c("int", "time"),
sharingstrct = "randprop",
surv.formula = Surv(survtime, cens) ~ treat,
study.name = "study", strat = F)) #93.88
system.time(onestagefit1<-jointmeta1(data = jointdat, long.formula = Y ~ 1 + time + treat*study,
long.rand.ind = c("int", "time"),
sharingstrct = "randprop",
surv.formula = Surv(survtime, cens) ~ treat*study,
study.name = "study", strat = F)) #96.77
system.time(onestagefit2<-jointmeta1(data = jointdat, long.formula = Y ~ 1 + time + treat,
long.rand.ind = c("int", "time"),
long.rand.stud = c("study", "treat"),
sharingstrct = "randprop",
surv.formula = Surv(survtime, cens) ~ treat,
study.name = "study", strat = F))#1312.14
system.time(onestagefit3<-jointmeta1(data = jointdat, long.formula = Y ~ 1 + time + treat*study,
long.rand.ind = c("int", "time"),
sharingstrct = "randprop",
surv.formula = Surv(survtime, cens) ~ treat,
study.name = "study", strat = T)) #42.95
system.time(onestagefit4<-jointmeta1(data = jointdat, long.formula = Y ~ 1 + time + treat + study,
long.rand.ind = c("int", "time"),
long.rand.stud = c("treat"),
sharingstrct = "randprop",
surv.formula = Surv(survtime, cens) ~ treat,
study.name = "study", strat = T)) #139.61
system.time(onestagefit0SE<-jointmetaSE(fitted = onestagefit0, n.boot = 200)) #9638.99
system.time(onestagefit1SE<-jointmetaSE(fitted = onestagefit1, n.boot = 200,
overalleffects = list(long = list(c("treat1", "treat1:study2"),
c("treat1", "treat1:study3"),
c("treat1", "treat1:study4"),
c("treat1", "treat1:study5")),
surv = list(c("treat1", "treat1:study2"),
c("treat1", "treat1:study3"),
c("treat1", "treat1:study4"),
c("treat1", "treat1:study5")))))
system.time(onestagefit2SE<-jointmetaSE(fitted = onestagefit2, n.boot = 200))
system.time(onestagefit3SE<-jointmetaSE(fitted = onestagefit3, n.boot = 200,
overalleffects = list(long = list(c("treat1", "treat1:study2"),
c("treat1", "treat1:study3"),
c("treat1", "treat1:study4"),
c("treat1", "treat1:study5")))))
system.time(onestagefit4SE<-jointmetaSE(fitted = onestagefit4, n.boot = 200))
onestage0<-list(onestagefit0,onestagefit0SE)
onestage1<-list(onestagefit1,onestagefit1SE)
onestage2<-list(onestagefit2,onestagefit2SE)
onestage3<-list(onestagefit3,onestagefit3SE)
onestage4<-list(onestagefit4,onestagefit4SE)
names(onestage0)<-c("onestagefit0","onestagefit0SE")
names(onestage1)<-c("onestagefit1","onestagefit1SE")
names(onestage2)<-c("onestagefit2","onestagefit2SE")
names(onestage3)<-c("onestagefit3","onestagefit3SE")
names(onestage4)<-c("onestagefit4","onestagefit4SE")
save(onestage0,file="onestage0.RData")
save(onestage1,file="onestage1.RData")
save(onestage2,file="onestage2.RData")
save(onestage3,file="onestage3.RData")
save(onestage4,file="onestage4.RData")
library(joineRmeta)
library(joineRmeta)
Sys.setenv(qpdf = "C://Program Files (x86)//qpdf-5.1.2-bin-mingw32//qpdf-5.1.2//bin//qpdf.exe")
library(joineRmeta)
library(joineRmeta)
Sys.setenv(qpdf = "C://Program Files (x86)//qpdf-5.1.2-bin-mingw32//qpdf-5.1.2//bin//qpdf.exe")
jointdat<-tojointdata(longitudinal = simdat2$longitudinal,
survival = simdat2$survival, id = "id", longoutcome = "Y",
timevarying = c("time","ltime"), survtime = "survtime", cens = "cens",
time = "time")
help("tojointdata", package = "joineRmeta")
str(jointdat)
jointdat$baseline$study <- as.factor(jointdat$baseline$study)
jointdat$baseline$treat <- as.factor(jointdat$baseline$treat)
sepplots <- jointmetaplot(dataset = jointdat, study = "study", longoutcome = "Y",
longtime = "time", survtime = "survtime", cens = "cens",
id = "id", smoother = TRUE,
studynames = c("Study 1", "Study 2", "Study 3"), type = "Both")
sepplots$longplots$`studyplot.Study 3`
sepplots$eventplots[[1]]
sepplots2 <- jointmetaplot(dataset = jointdat, study = "study", longoutcome = "Y",
longtime = "time", survtime = "survtime", cens = "cens",
id = "id", smoother = TRUE,
studynames = c("Study 1", "Study 2", "Study 3"),
type = "Both", eventby = "treat")
sepplots3 <- jointmetaplot(dataset = jointdat, study = "study", longoutcome = "Y",
longtime = "time", survtime = "survtime", cens = "cens",
id = "id", smoother = TRUE,
studynames = c("Study 1", "Study 2", "Study 3"),
type = "Event", eventconfint =  TRUE)
sepplots2$eventplots$`studyplot.Study 3`
sepplots3$eventplots[[2]]
sepplots3 <- jointmetaplot(dataset = jointdat, study = "study", longoutcome = "Y",
longtime = "time", survtime = "survtime", cens = "cens",
id = "id", smoother = TRUE,
studynames = c("Study 1", "Study 2", "Study 3"),
type = "Event", eventconfint =  TRUE)
dataset = jointdat
sepplots2 <- jointmetaplot(dataset = jointdat, study = "study", longoutcome = "Y",
longtime = "time", survtime = "survtime", cens = "cens",
id = "id", smoother = TRUE,
studynames = c("Study 1", "Study 2", "Study 3"),
type = "Both", eventby = "treat")
study = "study"
longoutcome = "Y"
cens = "cens"
survtime = "survtime"
longtime = "time"
id = "id"
smoother = TRUE
studynames = c("Study 1", "Study 2", "Study 3")
type = "Event"
eventconfint =  TRUE
library(joineRmeta)
library(joineRmeta)
Sys.getenv("qpdf")
Sys.setenv(qpdf = "C://Program Files (x86)//qpdf-5.1.2-bin-mingw32//qpdf-5.1.2//bin//qpdf.exe")
library(joineRmeta)
