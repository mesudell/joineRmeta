onestagefitSE <- jointmetaSE(fitted = onestagefit, n.boot = 125,
overalleffects = overalleffects = list(long = list(c("treat1", "treat1:study2"),
c("treat1", "treat1:study3"),
c("treat1", "treat1:study4"),
c("treat1", "treat1:study5")),
surv = list(c("treat1", "treat1:study2"),
c("treat1", "treat1:study3"),
c("treat1", "treat1:study4"),
c("treat1", "treat1:study5"))))
onestagefit2SE <- jointmetaSE(fitted = onestagefit2, n.boot = 125,
overalleffects = list(long = list(c("treat1", "treat1:study2"),
c("treat1", "treat1:study3"),
c("treat1", "treat1:study4"),
c("treat1", "treat1:study5")),
surv = list(c("treat1", "treat1:study2"),
c("treat1", "treat1:study3"),
c("treat1", "treat1:study4"),
c("treat1", "treat1:study5"))))
onestagefit2SE
library(joineRmeta)
?jointmeta1SE.object
?jointmeta1SE
?jointmetaSE
?longst
library(joineRmeta)
?longst
library(joineRmeta)
?longst
?print.jointmeta1
print(onestagefit)
print(onestagefit2)
library(joineRmeta)
library(joineRmeta)
?print.jointmetaSE
?print.jointmeta1SE
?print.jointmeta1SE
library(joineRmeta)
?print.jointmeta1SE
?print.jointmeta1SE
library(joineRmeta)
?rancov
rancov(onestagefit, type = "individual")
rancov(onestagefit2, type = "individual")
rancov(onestagefit2, type = "study")
library(joineRmeta)
?rancov
ranef(onestagefit2,"individual")
ranef(onestagefit2,"study")
onestagefit<-jointmeta1(data = jointdat, long.formula = Y ~ 1 + time +
treat + study, long.rand.ind = c("int", "time"),
long.rand.stud = c("treat"), sharingstrct = "randprop",
surv.formula = Surv(survtime, cens) ~ treat, study.name = "study",
strat = T)
ranef(onestagefit, type = "individual")
ranef(onestagefit, type = "study")
rancov(onestagefit, type = "study")
library(joineRmeta)
?ranef.jointModel
?ranef.jointmeta1
?removeafter
str(simdat3)
library(joineRmeta)
?removeafter
?sep
library(joineRmeta)
?sep
?joineRmeta:::simdat1randlevel
?simjointmeta
library(joineRmeta)
?joineRmeta:::simdat1randlevel
?joineRmeta:::simdat2randlevel2
?joineRmeta:::simdat2randlevels
library(joineRmeta)
?joineRmeta:::simdat2randlevels
?joineRmeta:::sortDat
?summary.jointmeta1
summary(onestagefit, variance = TRUE)
summary(onestagefit, variance = FALSE)
library(joineRmeta)
?summary.jointmeta1
?joineRmeta:::survst
?joineRmeta:::sortDat
?joineRmeta:::longst
library(joineRmeta)
?joineRmeta:::survst
library(joineRmeta)
library(joineRmeta)
?tojointdata
library(joineRmeta)
?tojointdata
library(joineRmeta)
?tojointdata
jointdat<-tojointdata(longitudinal = simdat$longitudinal,
survival = simdat$survival, id = "id", longoutcome = "Y",
timevarying = c("time","ltime"), survtime = "survtime", cens = "cens",
time = "time")
jointdat$baseline$study <- as.factor(jointdat$baseline$study)
jointdat$baseline$treat <- as.factor(jointdat$baseline$treat)
onestagefit<-jointmeta1(data = jointdat, long.formula = Y ~ 1 + time +
treat + study, long.rand.ind = c("int", "time"),
long.rand.stud = c("treat"), sharingstrct = "randprop",
surv.formula = Surv(survtime, cens) ~ treat, study.name = "study",
strat = T)
onestagefitSE <- jointmetaSE(fitted = onestagefit, n.boot = 110)
vcov(onestagefitSE)
library(joineRmeta)
library(joineRmeta)
devtools::use_readme_rmd()
library(joineRmeta)
?jointmeta1
str(jointdata)
str(jointdat)
data(simdat)
jointdat<-tojointdata(longitudinal = simdat$longitudinal,
survival = simdat$survival, id = "id", longoutcome = "Y",
timevarying = c("time","ltime"), survtime = "survtime", cens = "cens",
time = "time")
jointdat<-tojointdata(longitudinal = simdat$longitudinal,
survival = simdat$survival, id = "id", longoutcome = "Y",
timevarying = c("time","ltime"), survtime = "survtime", cens = "cens",
time = "time")
jointdat$baseline$study <- as.factor(jointdat$baseline$study)
jointdat$baseline$treat <- as.factor(jointdat$baseline$treat)
str(jointdat)
fit <- jointmeta1(data = jointdat,
long.formula = Y ~ 1 + time + treat,
long.rand.ind = c("int", "time"),
long.rand.stud = "study",
sharingstrct = "randprop",
surv.formula = Surv(survtime, cens) ~ treat,
study.name = "study",
strat = F)
fit <- jointmeta1(data = jointdat,
long.formula = Y ~ 1 + time + treat,
long.rand.ind = c("int", "time"),
long.rand.stud = "treat",
sharingstrct = "randprop",
surv.formula = Surv(survtime, cens) ~ treat,
study.name = "study",
strat = T)
summary(fit)
library(joineRmeta)
?simjointmeta
matrix(c(0.5,0.25,0.25,0.5),nrow=2)
data1<-simjointmeta(k = 5, n = rep(500, 5), sepassoc = FALSE, ntms = 5,
longmeasuretimes = c(0, 1, 2, 3, 4), beta1 = c(1, 2, 3), beta2 = 3,
rand_ind = "intslope", rand_stud = "inttreat",
gamma_ind = 1, gamma_stud = 1, sigb_ind =matrix(c(0.5,0.25,0.25,0.5),nrow=2),
sigb_stud = "intslope",
vare = 0.01, theta0 = -3, theta1 = 1, censoring = TRUE,
censlam = exp(-3), truncation = FALSE,
trunctime = max(longmeasuretimes))
data1<-simjointmeta(k = 5, n = rep(500, 5), sepassoc = FALSE, ntms = 5,
longmeasuretimes = c(0, 1, 2, 3, 4), beta1 = c(1, 2, 3), beta2 = 3,
rand_ind = "intslope", rand_stud = "inttreat",
gamma_ind = 1, gamma_stud = 1, sigb_ind =matrix(c(0.5,0.25,0.25,0.5),nrow=2),
sigb_stud = matrix(c(0.5,0.25,0.25,0.5),nrow=2),
vare = 0.01, theta0 = -3, theta1 = 1, censoring = TRUE,
censlam = exp(-3), truncation = FALSE,
trunctime = max(longmeasuretimes))
data2<-simjointmeta(k = 5, n = rep(500, 5), sepassoc = FALSE, ntms = 5,
longmeasuretimes = c(0, 1, 2, 3, 4), beta1 = c(1, 2, 3), beta2 = 3,
rand_ind = "intslope", rand_stud = "inttreat",
gamma_ind = 1, gamma_stud = 1, sigb_ind =matrix(c(0.5,0.25,0.25,0.5),nrow=2),
sigb_stud = matrix(c(0.5,0.25,0.25,0.5),nrow=2),
vare = 0.01, theta0 = -3, theta1 = 1, censoring = TRUE,
censlam = exp(-3), truncation = FALSE,
trunctime = max(longmeasuretimes))
?tojointdata
jointdata1<-tojointdata(longitudinal = data1$longitudinal,
survival = data1$survival, id = "id",
longoutcome = "Y", timevarying = c("time","ltime"),
survtime = "survtime", cens = "cens", time = "time")
data1<-simjointmeta(k = 5, n = rep(500, 5), sepassoc = FALSE, ntms = 5,
longmeasuretimes = c(0, 1, 2, 3, 4), beta1 = c(1, 2, 3), beta2 = 3,
rand_ind = "intslope", rand_stud = "inttreat",
gamma_ind = 1, gamma_stud = 1, sigb_ind =matrix(c(0.5,0.25,0.25,0.5),nrow=2),
sigb_stud = matrix(c(0.5,0.25,0.25,0.5),nrow=2),
vare = 0.01, theta0 = -3, theta1 = 1, censoring = TRUE,
censlam = exp(-3), truncation = FALSE,
trunctime = max(longmeasuretimes))
data2<-simjointmeta(k = 5, n = rep(500, 5), sepassoc = FALSE, ntms = 5,
longmeasuretimes = c(0, 1, 2, 3, 4), beta1 = c(3, 2, 1.5), beta2 = 3,
rand_ind = "intslope", rand_stud = "inttreat",
gamma_ind = 1, gamma_stud = 1, sigb_ind =matrix(c(0.5,0.25,0.25,0.5),nrow=2),
sigb_stud = matrix(c(0.5,0.25,0.25,0.5),nrow=2),
vare = 0.01, theta0 = -3, theta1 = 1, censoring = TRUE,
censlam = exp(-3), truncation = FALSE,
trunctime = max(longmeasuretimes))
jointdata1<-tojointdata(longitudinal = data1$longitudinal,
survival = data1$survival, id = "id",
longoutcome = "Y", timevarying = c("time","ltime"),
survtime = "survtime", cens = "cens", time = "time")
jointdata2<-tojointdata(longitudinal = data2$longitudinal,
survival = data2$survival, id = "id",
longoutcome = "Y", timevarying = c("time","ltime"),
survtime = "survtime", cens = "cens", time = "time")
?jointmetaplot
str(jointdata1)
plots1<-jointmetaplot(dataset = jointdata1, study = "study",
longoutcome = "Y", longtime = "time", survtime = "survtime",
cens = "cens", id = "id",
smoother = FALSE, studynames = NULL, type ="Both",
eventby = "treat", eventconfint = FALSE)
plots2<-jointmetaplot(dataset = jointdata2, study = "study",
longoutcome = "Y", longtime = "time", survtime = "survtime",
cens = "cens", id = "id",
smoother = FALSE, studynames = NULL, type ="Both",
eventby = "treat", eventconfint = FALSE)
?jointmetaplotall
plots1all<-jointmetaplotall(plotlist = plots1, ncol = 2, nrow = NULL, top = NULL,
type = "Both")
plots1all$longall
dataset = jointdata1
study = "study"
survtime = "survtime"
longtime = "time"
longoutcome = "Y"
cens = "cens"
id = "id"
studynames = NULL
type ="Both"
eventconfint = FALSE
smoother = FALSE
eventby = "treat"
if(class(dataset) != "jointdata"){
stop("Please run tojointdata function before attempting to plot data \n
this will give data in jointdata format")
}
if(missing(study)){
stop("Variable holding study membership has not been supplied to study")
}
studycol <- which(names(dataset$baseline) %in% study)
if(missing(longoutcome)){
stop("No variable specified as the longitudinal outcome")
}
if(missing(cens)){
stop("No variable specified as the event indicators to cens")
}
if(missing(id)){
stop("No variable specified as holding the id variable")
}
if(is.null(studynames) == FALSE){
if(class(studynames)!="character"){
stop("studynames should be supplied as a character string")
}
if(length(studynames)!=length(unique(dataset$baseline[, studycol]))){
stop("Different number of studynames supplied to
number of studies in dataset")
}
}
if(missing(type)){
stop("No type of graph requested")
}
if(!(type %in% c("Longitudinal","Event","Both"))){
stop("type should be supplied as one of \"Longitudinal\",
\"Event\", \"Both\")")
}
studies <- as.character(unique(dataset$baseline[, studycol]))
numstudies <- length(studies)
ids.bystudy <- lapply(1:numstudies, function(u){
dataset$baseline[which(dataset$baseline[, studycol] == studies[u]),
which(names(dataset$baseline)%in%id)]
})
dataset.bystudy <- lapply(1:numstudies, function(u){
out <- subset(dataset, ids.bystudy[[u]])
class(out) <- "jointdata"
out
})
plots <- list()
plotnames <- c()
for(i in 1:numstudies){
if(is.null(studynames)){
plotnametemp <- paste("studyplot.", studies[[i]], sep = "")
}else{
plotnametemp <- paste("studyplot.", studynames[[i]], sep = "")
}
plotnames <- c(plotnames, plotnametemp)
}
eventby
if(is.null(eventby) == FALSE){
if(!(eventby %in% names(dataset$baseline))){
stop("Supplied eventby is not in the dataset")
}
}
survtime
missing(survtime)
if(missing(survtime)){
stop("No variable specified as the survival time")
}
if(is.null(eventby)){
eventform <- as.formula(paste("Surv(",survtime,",",cens,")~1"))
}else{
eventform <- as.formula(paste("Surv(",survtime,",",cens,")~",eventby))
}
survtimemax<-ceiling(max(dataset$survival[
, which(names(dataset$survival) %in% survtime)]))
eventplots <- lapply(1:numstudies, function(u){
datatemp <- dataset.bystudy[[u]]$survival
if(is.null(dataset.bystudy[[u]]$baseline) == FALSE){
datatemp <- merge(datatemp, dataset.bystudy[[u]]$baseline)
}
kmplot <- survfit(eventform, data = datatemp, conf.type = "log-log")
if(is.null(eventby)==FALSE){
tempsum <- summary(kmplot)
kmplotdata <- do.call(data.frame,lapply(
c("time", "surv", "strata", "upper", "lower"),function(x){
tempsum[x]}))
tempdata<-lapply(1:length(unique(kmplotdata$strata)),function(x){
temp<-kmplotdata[kmplotdata$strata==unique(kmplotdata$strata)[x],]
for(j in 1:nrow( temp)) {
if(j == 1) {
kmplottemp <-  temp[1, ]
}else {
if( temp$surv[j]== temp$surv[j-1]) {
kmplottemp <- rbind(kmplottemp,  temp[j, ])
}else {
temprow <-  temp[(j - 1), ]
temprow$time <-  temp$time[j]
kmplottemp <- rbind(kmplottemp, temprow)
kmplottemp <- rbind(kmplottemp,  temp[j, ])
}
}
}
kmplottemp
})
kmplotdata <- do.call(rbind,tempdata)
if(eventconfint) {
groups <- lapply(1:length(unique(kmplotdata$strata)),function(x){
kmplotdata[kmplotdata$strata == unique(kmplotdata$strata)[x], ]
})
groups1 <- lapply(1:length(unique(kmplotdata$strata)),function(x){
tempdata <- groups[[x]]
temprow <- tempdata[1, ]
remove <- c()
for(i in 1:nrow(tempdata)){
if(is.na(tempdata$upper[i])||is.na(tempdata$lower[[i]])){
remove <- c(remove, i)
}
}
if(length(remove) > 0) {
tempdata <- tempdata[-remove, ]
}
temprow$time <- 0
temprow$surv <- 1
temprow$upper <- 1
temprow$lower <- 1
tempdata <- rbind(temprow, tempdata)
tempdata
})
for(i in 1:length(groups1)) {
groups1[[i]]$upper[
which(groups1[[i]]$surv %in%
(unique(groups1[[i]]$surv)[
(length(unique(groups1[[i]]$surv))-1):
length(unique(groups1[[i]]$surv))]))[-1]] <- NA
groups1[[i]]$lower[
which(groups1[[i]]$surv %in%
(unique(groups1[[i]]$surv)[
(length(unique(groups1[[i]]$surv))-1):
length(unique(groups1[[i]]$surv))]))[-1]] <- NA
}
kmplotdata <- do.call(rbind, groups1)
}
p <- ggplot(data = kmplotdata, aes(x = time, y = surv,
group = strata, colour = strata)) +
geom_line() +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position="bottom") +
xlab("Time") +
ylab("Survival") +
scale_colour_brewer(palette = "Set1", name = "Groups") +
xlim(0, survtimemax)+
ylim(0,1)
if(is.null(studynames)){
p <- p + ggtitle(studies[[u]])
}else{
p <- p + ggtitle(studynames[u])
}
if(eventconfint) {
p <- p + geom_line(aes(y = upper), linetype = 2, na.rm = TRUE)
p <- p + geom_line(aes(y = lower), linetype = 2, na.rm = TRUE)
}
p
}else{
time <- kmplot$time
surv <- kmplot$surv
kmplotdata <- data.frame(time = time, surv = surv)
if(eventconfint) {
kmplotdata$upper <- kmplot$upper
kmplotdata$lower <- kmplot$lower
}
for(j in 1:nrow(kmplotdata)) {
if(j == 1) {
kmplottemp <- kmplotdata[1, ]
}else {
if(kmplotdata$surv[j]==kmplotdata$surv[j-1]) {
kmplottemp <- rbind(kmplottemp, kmplotdata[j, ])
}else {
temprow <- kmplotdata[(j - 1), ]
temprow$time <- kmplotdata$time[j]
kmplottemp <- rbind(kmplottemp, temprow)
kmplottemp <- rbind(kmplottemp, kmplotdata[j, ])
}
}
}
kmplotdata <- kmplottemp
if(eventconfint) {
kmplotdata$upper[
which(kmplotdata$surv %in%
(unique(kmplotdata$surv)[
(length(unique(kmplotdata$surv))-1):
length(unique(kmplotdata$surv))]))[-1]] <- NA
kmplotdata$lower[
which(kmplotdata$surv %in%
(unique(kmplotdata$surv)[
(length(unique(kmplotdata$surv))-1):
length(unique(kmplotdata$surv))]))[-1]] <- NA
}
p <- ggplot(data = kmplotdata, aes(x = time, y = surv)) +
geom_line() +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position="bottom") +
xlab("Time") +
ylab("Survival") +
xlim(0, survtimemax)+
ylim(0,1)
if(is.null(studynames)){
p <- p + ggtitle(studies[[u]])
}else{
p <- p + ggtitle(studynames[u])
}
if(eventconfint) {
p <- p + geom_line(aes(y = upper), linetype = 2, na.rm = TRUE)
p <- p + geom_line(aes(y = lower), linetype = 2, na.rm = TRUE)
}
p
}
})
library(ggplot2)
dataset$survival
ceiling(max(dataset$survival[
, which(names(dataset$survival) %in% survtime)]))
plot(data1$survival$survtime)
data1$survival$survtime
data1$survival
dist(jointdata1$survival$survtime)
hist(jointdata1$survival$survtime)
data1<-simjointmeta(k = 5, n = rep(500, 5), sepassoc = FALSE, ntms = 5,
longmeasuretimes = c(0, 1, 2, 3, 4), beta1 = c(1, 2, 3), beta2 = 3,
rand_ind = "intslope", rand_stud = "inttreat",
gamma_ind = 1, gamma_stud = 1, sigb_ind =matrix(c(0.5,0.25,0.25,0.5),nrow=2),
sigb_stud = matrix(c(0.5,0.25,0.25,0.5),nrow=2),
vare = 0.01, theta0 = -3, theta1 = 1, censoring = TRUE,
censlam = exp(-3), truncation = TRUE,
trunctime = 10)
data2<-simjointmeta(k = 5, n = rep(500, 5), sepassoc = FALSE, ntms = 5,
longmeasuretimes = c(0, 1, 2, 3, 4), beta1 = c(3, 2, 1.5), beta2 = 3,
rand_ind = "intslope", rand_stud = "inttreat",
gamma_ind = 1, gamma_stud = 1, sigb_ind =matrix(c(0.5,0.25,0.25,0.5),nrow=2),
sigb_stud = matrix(c(0.5,0.25,0.25,0.5),nrow=2),
vare = 0.01, theta0 = -3, theta1 = 1, censoring = TRUE,
censlam = exp(-3), truncation = TRUE,
trunctime = 10)
jointdata1<-tojointdata(longitudinal = data1$longitudinal,
survival = data1$survival, id = "id",
longoutcome = "Y", timevarying = c("time","ltime"),
survtime = "survtime", cens = "cens", time = "time")
jointdata2<-tojointdata(longitudinal = data2$longitudinal,
survival = data2$survival, id = "id",
longoutcome = "Y", timevarying = c("time","ltime"),
survtime = "survtime", cens = "cens", time = "time")
plots1<-jointmetaplot(dataset = jointdata1, study = "study",
longoutcome = "Y", longtime = "time", survtime = "survtime",
cens = "cens", id = "id",
smoother = FALSE, studynames = NULL, type ="Both",
eventby = "treat", eventconfint = FALSE)
plots2<-jointmetaplot(dataset = jointdata2, study = "study",
longoutcome = "Y", longtime = "time", survtime = "survtime",
cens = "cens", id = "id",
smoother = FALSE, studynames = NULL, type ="Both",
eventby = "treat", eventconfint = FALSE)
plots1all<-jointmetaplotall(plotlist = plots1, ncol = 2, nrow = NULL, top = NULL,
type = "Both")
plots1all<-jointmetaplotall(plotlist = plots1, ncol = 2, nrow = NULL, top = "",
type = "Both")
plots1all<-jointmetaplotall(plotlist = plots2, ncol = 2, nrow = NULL, top = "",
type = "Both")
plots1all<-jointmetaplotall(plotlist = plots1, ncol = 2, nrow = NULL, top = "",
type = "Both")
plots2all<-jointmetaplotall(plotlist = plots2, ncol = 2, nrow = NULL, top = "",
type = "Both")
plots1all$longall
plots1<-jointmetaplot(dataset = jointdata1, study = "study",
longoutcome = "Y", longtime = "time", survtime = "survtime",
cens = "cens", id = "id",
smoother = TRUE, studynames = NULL, type ="Both",
eventby = "treat", eventconfint = FALSE)
plots2<-jointmetaplot(dataset = jointdata2, study = "study",
longoutcome = "Y", longtime = "time", survtime = "survtime",
cens = "cens", id = "id",
smoother = TRUE, studynames = NULL, type ="Both",
eventby = "treat", eventconfint = FALSE)
plots1all<-jointmetaplotall(plotlist = plots1, ncol = 2, nrow = NULL, top = "",
type = "Both")
plots2all<-jointmetaplotall(plotlist = plots2, ncol = 2, nrow = NULL, top = "",
type = "Both")
plots1all$longall
plots2all$longall
plots2all$eventsall
